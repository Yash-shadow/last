version: "3.1"
services:
        demo:
                image: yash1600/spring-pet:v9
                container_name: demo
                environment:
                        SPRING_DATASOURCE_URL: jdbc:postgresql://db/compose-postgres
                        SPRING_DATASOURCE_USERNAME: compose-postgres
                        SPRING_DATASOURCE_PASSWORD: compose-postgres
                        SPRING_JPA_HIBERNATE_DDL_AUTO: update
                        LOKI_HOST: "loki"
                        TEMPO_HOST: "tempo"
                ports:
                        - 8080:8080


        db:
                image: 'postgres:13.1-alpine'
                container_name: db
                environment:
                        - POSTGRES_USER=compose-postgres
                        - POSTGRES_PASSWORD=compose-postgres

                volumes:
                        - user_data:/var/lib/postgresql




        tempo:
                image: grafana/tempo
                command: [ "-config.file=/etc/tempo.yaml" ]
                container_name: tempo
                volumes:
                        - ./docker/tempo/tempo-local.yml:/etc/tempo.yaml:ro
                        - ./docker/tempo/tempo-data:/tmp/tempo
                ports:
                        - "14268"  # jaeger ingest
                        - "9411:9411" # zipkin

        loki:
                image: grafana/loki
                container_name: loki
                command: [ "-config.file=/etc/loki/local-config.yaml" ]
                ports:
                        - "3100:3100"
                environment:
                        - JAEGER_AGENT_HOST=tempo
                        - JAEGER_ENDPOINT=http://tempo:14268/api/traces
                        - JAEGER_SAMPLER_TYPE=const
                        - JAEGER_SAMPLER_PARAM=1

        prometheus:
                image: prom/prometheus
                container_name: prometheus
                extra_hosts: [ 'host.docker.internal:host-gateway' ]
                command:
                        - --enable-feature=exemplar-storage
                        - --config.file=/etc/prometheus/prometheus.yml
                volumes:
                        - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
                ports:
                        - "9090:9090"

        grafana:
                image: grafana/grafana
                container_name: grafana
                volumes:
                        - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources:ro
                environment:
                        - GF_AUTH_ANONYMOUS_ENABLED=true
                        - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
                        - GF_AUTH_DISABLE_LOGIN_FORM=true
                ports:
                        - 3000:3000

volumes:
        user_data:
                driver: local
